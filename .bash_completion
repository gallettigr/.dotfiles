#!/usr/bin/env bash

# PIP
_pip() {
    local cur prev commands opts
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD - 1]}"
    first="${COMP_WORDS[0]}"

    commands=$($first --help | awk '/Commands\:/,/General Options\:/' |
        \grep -E -o "^\s{2}\w+" | tr -d ' ')
    opts=$($first --help | \grep -E -o "((-\w{1}|--(\w|-)*=?)){1,2}")

    if [ $COMP_CWORD == 1 ]; then
        COMPREPLY=($(compgen -W "${commands}" -- ${cur}))
        return 0
    fi

    if [[ ${cur} == -* ]]; then
        local command_opts
        command_opts=$($first $prev --help |
            \grep -E -o "((-\w{1}|--(\w|-)*=?)){1,2}")
        COMPREPLY=($(compgen -W "${command_opts}" -- ${cur}))
        return 0
    fi
}
complete -o default -F _pip pip
complete -o default -F _pip pip2
complete -o default -F _pip pip3

# Git
if type _git &>/dev/null && [ -f /usr/local/etc/bash_completion.d/git-completion.bash ]; then
    # Enable tab completion for `g` by marking it as an alias for `git`
    complete -o default -o nospace -F _git g

    # Git Number
    if [ -x "$(command -v git-number)" ]; then
        complete -o default -o nospace -F _git "git number"
        complete -o default -o nospace -F _git gn
        complete -o default -o nospace -F _git gs
        complete -o default -o nospace -F _git ga
        complete -o default -o nospace -F _git gd
        complete -o default -o nospace -F _git gr
        complete -o default -o nospace -F _git gco
    fi
fi
